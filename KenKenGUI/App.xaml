<Application x:Class="KenKenGUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:KenKenGUI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:SizeConverter x:Key="SizeConverter"/>
        <Style x:Key="Simple_Button" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Arial Narrow"/>
            <Setter Property="FontSize" Value="12px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="White"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Orange" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         Padding="4,2"
                         BorderBrush="White"
                         CornerRadius="3"
                         Background="{TemplateBinding Background}">
                            <ContentPresenter 
                        Margin="2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        RecognizesAccessKey="True" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Red"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.15" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation To="Orange"
                                        Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)" 
                                        FillBehavior="HoldEnd" Duration="0:0:0.15" AutoReverse="False" RepeatBehavior="1x"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>

                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Background" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="KenKen_Button" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Arial Narrow"/>
            <Setter Property="FontSize" Value="12px"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Opacity="1" Color="White"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Orange" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <Border x:Name="border"
                         SnapsToDevicePixels="True"
                         BorderThickness="1"
                         Padding="4,2"
                         BorderBrush="White"
                         CornerRadius="3"
                         Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True"
                                Width="{Binding ActualWidth, ConverterParameter=0.78, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}"
                                Height="{Binding ActualHeight, ConverterParameter=0.78, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Border}}}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="cutomPathButton" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="100"/>
            <Setter Property="Background" Value="Orange"/>
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform 
                            CenterX="{Binding ActualWidth, ConverterParameter=0.5, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                            CenterY="{Binding ActualHeight, ConverterParameter=0.5, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform
                            CenterX="{Binding ActualWidth, ConverterParameter=0.5, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
                            CenterY="{Binding ActualHeight, ConverterParameter=0.5, Converter={StaticResource SizeConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <Ellipse Fill="{TemplateBinding Background}"/>
                            <ContentPresenter/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1.1" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleX)"
                                                 Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1.1" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 Duration="0:0:0.15"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleX)"
                                                 Duration="0:0:0.30"/>
                            </Storyboard>
                        </BeginStoryboard>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation To="1" Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)"
                                                 Duration="0:0:0.30"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Background" Value="Orange"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" Value="Gray"/>
                </Trigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0" To="360" Duration="0:0:0.30" AutoReverse="False" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
